version: 2.1

defaults:
  rust_image: &rust_image quay.io/tarilabs/rust_tari-build-with-deps:nightly-2020-06-10

commands:
  test:
    description: Run the tests
    parameters:
      release:
        description: Set this to true to compile in release mode.
        type: boolean
        default: false
    steps:
      - run:
          name: Checkout code
          command: |
              git clone https://github.com/tari-project/tari
              cd tari
      - run:
          name: Calculate dependencies
          command: |
            cd tari
            rustc --version >rust-version
            test -e Cargo.lock || cargo generate-lockfile
      - restore_cache:
          keys:
            - v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-<<parameters.release>>-{{checksum "Cargo.lock"}}
      - run:
          name: Build the project
          command: |
            cd tari
            cargo build --all --all-features --jobs=3 <<#parameters.release>>--release<</parameters.release>>
      - run:
          name: Cargo fmt
          command: |
            cd tari
            TOOLCHAIN=$(cat rust-toolchain)
            rustup component add --toolchain $TOOLCHAIN rustfmt
            cargo fmt --all -- --check
      - run:
          name: Run tests
          command: |
            cd tari
            cargo test --workspace --all-features --jobs=3 <<#parameters.release>>--release<</parameters.release>>
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-<<parameters.release>>-{{checksum "Cargo.lock"}}
  clippy:
    description: cargo clippy
    steps:
      - run:
          name: Calculate dependencies
          command: |
            cd tari
            rustc --version >rust-version
            test -e Cargo.lock || cargo generate-lockfile
      - restore_cache:
          keys:
            - v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-{{checksum "Cargo.lock"}}
      - run:
          name: Cargo fmt
          command: |
            cd tari
            TOOLCHAIN=$(cat rust-toolchain)
            rustup component add --toolchain $TOOLCHAIN rustfmt
            cargo fmt --all -- --check
      - run:
          name: Run clippy
          command: |
            cd tari
            cargo clippy -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v6-cargo-cache-{{arch}}-{{checksum "rust-version"}}-{{checksum "Cargo.lock"}}


